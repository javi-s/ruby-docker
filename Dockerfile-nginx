FROM nginx

# Install dependencies
RUN apt-get update -qq && apt-get -y install apache2-utils

# establish where Nginx should look for files
ENV WWW_ROOT /var/www/app/

# Set our working directory inside the image
WORKDIR $WWW_ROOT

# create log directory
RUN mkdir log

# create public directory
RUN mkdir public

# copy over static assets
# COPY public public/

# Copy Nginx template certificates
RUN mkdir -p /etc/nginx/ssl/
COPY nginx/ssl /etc/nginx/ssl/
RUN chmod 700 /etc/nginx/ssl/private/

# Copy Nginx config template
COPY nginx/nginx.conf /tmp/docker_example.nginx

# substitute variable references in the Nginx config template for real values from the environment
# put the final config in its place
RUN mkdir /etc/nginx/sites-available
RUN envsubst '$WWW_ROOT' < /tmp/docker_example.nginx > /etc/nginx/sites-available/rubysite.conf
RUN ln -s /etc/nginx/sites-available/rubysite.conf /etc/nginx/conf.d
RUN rm -f /tmp/docker_example.nginx
RUN mv /etc/nginx/conf.d/default.conf /etc/nginx/sites-available

EXPOSE 80

# Use the "exec" form of CMD so Nginx shuts down gracefully on SIGTERM (i.e. `docker stop`)
CMD [ "nginx", "-g", "daemon off;" ]
